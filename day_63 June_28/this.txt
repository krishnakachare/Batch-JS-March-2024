/* 
Q. what is 'this'?
    'this' is a object
     which object ?
     containing dynamic value/object according to scope
 
      -𝐈𝐧 𝐚 script and 𝐟𝐮𝐧𝐜𝐭𝐢𝐨𝐧s, '𝐭𝐡𝐢𝐬' 𝐫𝐞𝐟𝐞𝐫𝐬 𝐭𝐨 𝐭𝐡𝐞 𝐠𝐥𝐨𝐛𝐚𝐥 𝐨𝐛𝐣𝐞𝐜𝐭.
      -𝐈𝐧 𝐚 𝐦𝐞𝐭𝐡𝐨𝐝, '𝐭𝐡𝐢𝐬' 𝐫𝐞𝐟𝐞𝐫𝐬 𝐭𝐨 𝐭𝐡𝐞 𝐨𝐰𝐧𝐞𝐫 𝐨𝐛𝐣𝐞𝐜𝐭.(depends on function and its nested structure)
      -𝐈𝐧 𝐚 𝐜𝐨𝐧𝐬𝐭𝐫𝐮𝐜𝐭𝐨𝐫, '𝐭𝐡𝐢𝐬' 𝐫𝐞𝐟𝐞𝐫𝐬 𝐭𝐨 𝐭𝐡𝐞 𝐧𝐞𝐰 𝐨𝐛𝐣𝐞𝐜𝐭 𝐛𝐞𝐢𝐧𝐠 𝐜𝐫𝐞𝐚𝐭𝐞𝐝.
*/

// console.log("Outer this", this) // window
let fun = () => {
  console.log("fun", this) // window
}
// fun()

let obj = {
  fNmae: "I am Obj",
  lastName: this,  // window
  printName: function () {
    console.log("printName", this) // obj
    let printName2 = () => {
      console.log("printName3", this) // obj
    }
    printName2();
  },
  printName2: () => {
    console.log("printName2", this) // window
  }
}
// console.log("key", obj.lastName)
// obj.printName()
// obj.printName2()
//--------------------------------------------------------------

function printName1() {
  console.log(this)
}
// printName1() // window

//4. function constructor : Before the ES6 way of object create. IN ES6 class introduced
function printName(name) {
  this.name = name;
  console.log("function constructor", this)
}
// let obj2 = new printName("js");