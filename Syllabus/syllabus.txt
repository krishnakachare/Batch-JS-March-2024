
The JavaScript Tree ðŸ‘‡
|
|â”€â”€ Variables
| â”œâ”€â”€ var
| â”œâ”€â”€ let
| â””â”€â”€ const
|
|â”€â”€ Data Types
| â”œâ”€â”€ String
| â”œâ”€â”€ Number
| â”œâ”€â”€ Boolean
| â”œâ”€â”€ Object
| â”œâ”€â”€ Array
| â”œâ”€â”€ Null
| â””â”€â”€ Undefined
|
|â”€â”€ Operators
| â”œâ”€â”€ Arithmetic
| â”œâ”€â”€ Assignment
| â”œâ”€â”€ Comparison
| â”œâ”€â”€ Logical
| â”œâ”€â”€ Unary
| â””â”€â”€ Ternary (Conditional)
|
|â”€â”€ Control Flow
| â”œâ”€â”€ if statement
| â”œâ”€â”€ else statement
| â”œâ”€â”€ else if statement
| â”œâ”€â”€ switch statement
| â”œâ”€â”€ for loop
| â”œâ”€â”€ while loop
| â””â”€â”€ do-while loop
|
|â”€â”€ Functions
| â”œâ”€â”€ Function declaration
| â”œâ”€â”€ Function expression
| â”œâ”€â”€ Arrow function
| â””â”€â”€ IIFE (Immediately Invoked Function Expression)
|
|â”€â”€ Scope
| â”œâ”€â”€ Global scope
| â”œâ”€â”€ Local scope
| â”œâ”€â”€ Block scope
| â””â”€â”€ Lexical scope
|
|â”€â”€ Arrays
| â”œâ”€â”€ Array methods
| | â”œâ”€â”€ push()
| | â”œâ”€â”€ pop()
| | â”œâ”€â”€ shift()
| | â”œâ”€â”€ unshift()
| | â”œâ”€â”€ splice()
| | â”œâ”€â”€ slice()
| | â””â”€â”€ concat()
| â””â”€â”€ Array iteration
| â”œâ”€â”€ forEach()
| â”œâ”€â”€ map()
| â”œâ”€â”€ filter()
| â””â”€â”€ reduce()
|
|â”€â”€ Objects
| â”œâ”€â”€ Object properties
| | â”œâ”€â”€ Dot notation
| | â””â”€â”€ Bracket notation
| â”œâ”€â”€ Object methods
| | â”œâ”€â”€ Object.keys()
| | â”œâ”€â”€ Object.values()
| | â””â”€â”€ Object.entries()
| â””â”€â”€ Object destructuring
|
|â”€â”€ Promises
| â”œâ”€â”€ Promise states
| | â”œâ”€â”€ Pending
| | â”œâ”€â”€ Fulfilled
| | â””â”€â”€ Rejected
| â”œâ”€â”€ Promise methods
| | â”œâ”€â”€ then()
| | â”œâ”€â”€ catch()
| | â””â”€â”€ finally()
| â””â”€â”€ Promise.all()
|
|â”€â”€ Asynchronous JavaScript
| â”œâ”€â”€ Callbacks
| â”œâ”€â”€ Promises
| â””â”€â”€ Async/Await
|
|â”€â”€ Error Handling
| â”œâ”€â”€ try...catch statement
| â””â”€â”€ throw statement
|
|â”€â”€ JSON (JavaScript Object Notation)
|
|â”€â”€ Modules
| â”œâ”€â”€ import
| â””â”€â”€ export
|
|â”€â”€ DOM Manipulation
| â”œâ”€â”€ Selecting elements
| â”œâ”€â”€ Modifying elements
| â””â”€â”€ Creating elements
|
|â”€â”€ Events
| â”œâ”€â”€ Event listeners
| â”œâ”€â”€ Event propagation
| â””â”€â”€ Event delegation
|
|â”€â”€ AJAX (Asynchronous JavaScript and XML)
|
|â”€â”€ Fetch API
|
|â”€â”€ ES6+ Features
| â”œâ”€â”€ Template literals
| â”œâ”€â”€ Destructuring assignment
| â”œâ”€â”€ Spread/rest operator
| â”œâ”€â”€ Arrow functions
| â”œâ”€â”€ Classes
| â”œâ”€â”€ let and const
| â”œâ”€â”€ Default parameters
| â”œâ”€â”€ Modules
| â””â”€â”€ Promises
|
|â”€â”€ Web APIs
| â”œâ”€â”€ Local Storage
| â”œâ”€â”€ Session Storage
| â””â”€â”€ Web Storage API
|
|â”€â”€ Libraries and Frameworks
| â”œâ”€â”€ React
| â”œâ”€â”€ Angular
| â””â”€â”€ Vue.js
|
|â”€â”€ Debugging
| â”œâ”€â”€ Console.log()
| â”œâ”€â”€ Breakpoints
| â””â”€â”€ DevTools
|
|â”€â”€ Others
| â”œâ”€â”€ Closures
| â”œâ”€â”€ Callbacks
| â”œâ”€â”€ Prototypes
| â”œâ”€â”€ this keyword
| â”œâ”€â”€ Hoisting
| â””â”€â”€ Strict mode



1.	What JavaScript is?
2.	First JavaScript script.
3.	Comments
4.	Internal JS
5.	External JS File
6.	Data types
7.	Variables
8.	Variable Hoisting
9.	     variable scopes
10.	Dialogue  boxes
11.	Operators
12.	Conditionals
13.	Loop
14.	Functions
15.	Math
16.	Strings
17.	Array
18.	Object
19.	OOPS
20.	Closures
21.	Prototypes
22.	Events
23.	DOM
24.	Date
25.	setInterval, SetTimeout
26.	BOM(Browser Object Model)
27.	Cookies
28.	Offline Storage
29.	Callback , Promise, async await
30.	ECMASCRIPT - 6































